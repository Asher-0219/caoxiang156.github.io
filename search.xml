<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[JS开发中的一些小技巧和方法]]></title>
    <url>%2F2017%2F09%2F01%2Ftips%2F</url>
    <content type="text"><![CDATA[生成指定范围内的随机数123function setRadomNum(min,max)&#123; return Math.floor(Math.random() * (max - min + 1)) + min; &#125; json转url参数1234567function json2url(json) &#123; var arr=[]; for(var name in json)&#123; arr.push(name+&apos;=&apos;+json[name]); &#125; return arr.join(&apos;&amp;&apos;);&#125; 验证是否为数组123function isArray(obj)&#123; return Array.isArray(obj) || Object.prototype.toString.call(obj) === &apos;[object Array]&apos;;&#125; 清空数组1234567891011方式一 通过将长度设置为0var arr=[1,2,3,4,5];arr.length=0;方式二 通过splice方法 var arr=[1,2,3,4,5];arr.splice(0,arr.length);//方式三var arr=[1,2,3,4,5];arr=[]; 保留指定小数位12345var num =3.1415926;num = num.toFixed(4); //toFixed()方法可把 Number 四舍五入为指定小数位数的数字，括号里面取值0~20（包括0和20）console.log(num); //3.1416 打乱数组的顺序123456789101112131415方式一arr.sort(function()&#123;return Math.random()-0.5&#125;);方式二function shuffle(arr) &#123; var i, j, temp; for (i = arr.length - 1; i &gt; 0; i--) &#123; j = Math.floor(Math.random() * (i + 1)); temp = arr[i]; arr[i] = arr[j]; arr[j] = temp; &#125; return arr; &#125;; 使用 === 而不是 ==12345678[10] == 10 // 为 true[10] === 10 // 为 false&apos;10&apos; == 10 // 为 true&apos;10&apos; === 10 // 为 false [] == 0 // 为 true [] === 0 // 为 false &apos;&apos; == false // 为 true 但 true == &quot;a&quot; 为false &apos;&apos; === false // 为 false 妙用“&amp;&amp;”和“||”用于赋值12345var attr = true &amp;&amp; 4 &amp;&amp; &quot;aaa&quot;; //aaa;var attr = true &amp;&amp; 0 &amp;&amp; &quot;aaa&quot;; //0var attr = 100 || 12; //100var attr = &quot;e&quot; || &quot;hahaha&quot; //&apos;e&apos;var attr = &quot;&quot; || &quot;hahaha&quot; //&apos;hahaha&apos; 用于条件执行语句123456789101112// 普通的if语句if(test)&#123; isTrue();&#125;// 上面的语句可以使用 &apos;&amp;&amp;&apos; 写为：( test &amp;&amp; isTrue() );test = false;if(!test)&#123; isFalse();&#125;// 上面的语句可以使用 &apos;||&apos; 写为：( test || isFalse()); 用于多次判断后的赋值123456789101112131415161718var add_level = 0; if(add_step == 5)&#123; add_level = 1; &#125; else if(add_step == 10)&#123; add_level = 2; &#125; else if(add_step == 12)&#123; add_level = 3; &#125; else if(add_step == 15)&#123; add_level = 4; &#125; else &#123; add_level = 0; &#125;//可以写成var add_level = (add_step==5 &amp;&amp; 1) || (add_step==10 &amp;&amp; 2) || (add_step==12 &amp;&amp; 3) || (add_step==15 &amp;&amp; 4) || 0; 获取数组中的最大值或最小值123456function maxAndMin(arr)&#123; return &#123; max:Math.max.apply(null,arr.join(&apos;,&apos;).split(&apos;,&apos;)), min:Math.min.apply(null,arr.join(&apos;,&apos;).split(&apos;,&apos;)) &#125;&#125; 随机获取数组里的元素123function getRadomFromArr(arr)&#123; return arr[Math.floor(Math.random()*arr.length)];&#125; 从数组里查找指定的值12345678function findInArr(arr, value)&#123; for (var i=0; i&lt;arr.length; i++)&#123; if (arr[i] == value)&#123; return true; &#125; &#125; return false;&#125; 生成指定长度的随机数字字母字符串12345function getRandomStr(len) &#123; var str = &quot;&quot;; for( ; str.length &lt; len; str += Math.random().toString(36).substr(2)); return str.substr(0, len);&#125; 去除字符串的空格去除首尾空格1234function trim(str)&#123; return str.replace(/(^\s*)|(\s*$)/g, &quot;&quot;);&#125;trim(&apos; hello world &apos;); //&quot;hello world&quot; 去除所有空格1234function trimAll(str)&#123; return str.replace(/\s+/g,&quot;&quot;);&#125;trimAll(&apos; he ll o wo r ld &apos;); //&quot;helloworld&quot;]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F07%2F17%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
