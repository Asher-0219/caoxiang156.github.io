<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>控制自己掌控敌人</title>
  <subtitle>每天都要进步</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="caoxiang156.github.io/"/>
  <updated>2017-09-25T06:58:31.479Z</updated>
  <id>caoxiang156.github.io/</id>
  
  <author>
    <name>阿仔</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>移动 Web 开发问题和优化小结</title>
    <link href="caoxiang156.github.io/2017/09/25/mobile/"/>
    <id>caoxiang156.github.io/2017/09/25/mobile/</id>
    <published>2017-09-25T03:24:24.271Z</published>
    <updated>2017-09-25T06:58:31.479Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-Meta标签"><a href="#1-Meta标签" class="headerlink" title="1.Meta标签"></a>1.Meta标签</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;meta content=<span class="string">"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0;"</span> name=<span class="string">"viewport"</span> /&gt;</div></pre></td></tr></table></figure>
<h3 id="禁止ios上自动识别电话"><a href="#禁止ios上自动识别电话" class="headerlink" title="禁止ios上自动识别电话"></a>禁止ios上自动识别电话</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;meta content=<span class="string">"telephone=no"</span> name=<span class="string">"format-detection"</span> /&gt;</div></pre></td></tr></table></figure>
<h3 id="禁止android上自动识别邮箱"><a href="#禁止android上自动识别邮箱" class="headerlink" title="禁止android上自动识别邮箱"></a>禁止android上自动识别邮箱</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;meta content=<span class="string">"email=no"</span> name=<span class="string">"format-detection"</span> /&gt;</div></pre></td></tr></table></figure>
<h3 id="针对ios上的safari上地址栏和顶端样式条"><a href="#针对ios上的safari上地址栏和顶端样式条" class="headerlink" title="针对ios上的safari上地址栏和顶端样式条"></a>针对ios上的safari上地址栏和顶端样式条</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;meta name=<span class="string">"apple-mobile-web-app-capable"</span> content=<span class="string">"yes"</span> /&gt;</div><div class="line">&lt;meta name="apple-mobile-web-app-status-bar-style" content="black" /&gt;</div></pre></td></tr></table></figure>
<h1 id="3-打电话发短信"><a href="#3-打电话发短信" class="headerlink" title="3.打电话发短信"></a>3.打电话发短信</h1><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;a href="tel:020-11811922"&gt;打电话给:0755-10086&lt;/a&gt;</div><div class="line">&lt;a href="sms:10086"&gt;发短信给: 10086&lt;/a&gt;</div></pre></td></tr></table></figure>
<h1 id="4-css3过渡动画开启硬件加速"><a href="#4-css3过渡动画开启硬件加速" class="headerlink" title="4.css3过渡动画开启硬件加速"></a>4.css3过渡动画开启硬件加速</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">.translate3d&#123;</div><div class="line">       -webkit-transform: translate3d(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</div><div class="line">       -moz-transform: translate3d(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</div><div class="line">       -ms-transform: translate3d(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</div><div class="line">       transform: translate3d(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<h1 id="5-移动端click屏幕产生200-300-ms的延迟响应"><a href="#5-移动端click屏幕产生200-300-ms的延迟响应" class="headerlink" title="5.移动端click屏幕产生200-300 ms的延迟响应"></a>5.移动端click屏幕产生200-300 ms的延迟响应</h1><p>click事件因为要等待确认是否是双击事件，会有300ms的延迟（两次点击事件间隔小于300ms就认为是双击），体验并不好。现在的解决方案，第一个就是采用touchstart或者touchend代替click。或者封装tap事件来代替click 事件，所谓的tap事件由touchstart事件+ touchmove（判断是否是滑动事件）+touchend事件封装组成。关于touch和鼠标事件的延迟说明</p>
<p><img src="/img/1.png"></p>
<p>所以在手机上还是使用touch事件来代替click事件</p>
<h1 id="6-图片优化"><a href="#6-图片优化" class="headerlink" title="6.图片优化"></a>6.图片优化</h1><h2 id="6-1-base64编码图片替换url图片"><a href="#6-1-base64编码图片替换url图片" class="headerlink" title="6-1.base64编码图片替换url图片"></a>6-1.base64编码图片替换url图片</h2><p>这个应该没什么好解释的，就是能不发请求的就不要发，对于一些小图标之类的，可以将图片用base64，来减少请求的发送。</p>
<h2 id="6-2-图片压缩"><a href="#6-2-图片压缩" class="headerlink" title="6-2.图片压缩"></a>6-2.图片压缩</h2><p>对于整个网站来说，图片是最占流量的资源之一，能不使用就不适用，图标可是使用base64编码，字体图标代替，SVG等来代替，使用就要选择最合适的格式，合适的尺寸，然后压缩–这里推荐腾讯推出的<a href="http://zhitu.isux.us/" target="_blank" rel="external">智图</a></p>
<h2 id="6-3-图片懒加载"><a href="#6-3-图片懒加载" class="headerlink" title="6-3.图片懒加载"></a>6-3.图片懒加载</h2><p>首屏加载的快慢，直接影响用户的体验，建议将非首屏的图片资源放到用户需要时才加载。这样可以大大优化首屏加载，减少首屏加载所需要的时间！<br>ps：懒加载要使用js频繁操作dom，期间会导致大量重绘渲染，影响性能。</p>
<h2 id="6-4-img还是background"><a href="#6-4-img还是background" class="headerlink" title="6-4.img还是background"></a>6-4.img还是background</h2><p>图片的展示方式有两种，一种是以图片标签显示，一种是以背景图片显示！下面写了这两者的区别。<br>img：html中的标签img是网页结构的一部分会在加载结构的过程中和其他标签一起加载。<br>background：以css背景图存在的图片background会等到结构加载完成（网页的内容全部显示以后）才开始加载<br>也就是说，网页会先加载标签img的内容，再加载背景图片background引用的图片。引入一张图片，那么在这个图片加载完成之前，img后的内容不会显示。而用background来引入同样的图片，网页结构和内容加载完成之后，才开始加载背景图片，网页内容能正常浏览，但是看不到背景图片。</p>
<h1 id="7-1px细线解决方案"><a href="#7-1px细线解决方案" class="headerlink" title="7. 1px细线解决方案"></a>7. 1px细线解决方案</h1><h2 id="1-用小数来写px值"><a href="#1-用小数来写px值" class="headerlink" title="1.用小数来写px值"></a>1.用小数来写px值</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">.border &#123; border: 1px solid #999 &#125;</div><div class="line">@media screen and (-webkit-min-device-pixel-ratio: 2) &#123;</div><div class="line">    .border &#123; border: 0.5px solid #999 &#125;</div><div class="line">&#125;</div><div class="line">@media screen and (-webkit-min-device-pixel-ratio: 3) &#123;</div><div class="line">    .border &#123; border: 0.333333px solid #999 &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="2-before-after与transform"><a href="#2-before-after与transform" class="headerlink" title="2.:before, :after与transform"></a>2.:before, :after与transform</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">.radius-border&#123;</div><div class="line">    position: relative;</div><div class="line">&#125;</div><div class="line">@media screen and (-webkit-min-device-pixel-ratio: 2)&#123;</div><div class="line">    .radius-border:before&#123;</div><div class="line">        content: "";</div><div class="line">        pointer-events: none; /* 防止点击触发 */</div><div class="line">        box-sizing: border-box;</div><div class="line">        position: absolute;</div><div class="line">        width: 200%;</div><div class="line">        height: 200%;</div><div class="line">        left: 0;</div><div class="line">        top: 0;</div><div class="line">        border-radius: 8px;</div><div class="line">        border:1px solid #999;</div><div class="line">        -webkit-transform(scale(0.5));</div><div class="line">        -webkit-transform-origin: 0 0;</div><div class="line">        transform(scale(0.5));</div><div class="line">        transform-origin: 0 0;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="8-谨慎使用fixed"><a href="#8-谨慎使用fixed" class="headerlink" title="8.谨慎使用fixed"></a>8.谨慎使用fixed</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ios下fixed元素容易定位出错，软键盘弹出时，影响fixed元素定位，会发生元素错位，有时候会出现闪屏的效果。所以在手机上，不建议用fixed定位，使用absolute代替！</div></pre></td></tr></table></figure>
<h1 id="9-使用rem适配"><a href="#9-使用rem适配" class="headerlink" title="9.使用rem适配"></a>9.使用rem适配</h1><p>1.rem:rem和em单位一样，都是一个相对单位。不同的是em是相对于元素的父元素的font-size进行计算；rem是相对于根元素html的font-size进行计算。这样一来rem就绕开了复杂的层级关系，实现了类似于em单位的功能。</p>
<p>2.屏幕根据设计稿的比例转换对应的rem值，比如：</p>
<p>640的设置 = 20*(clientWidth/320) </p>
<p>320的设置 = 10*(clientWidth/320) </p>
<p>设置html font-size的工作我们交给js去实现，所以我的切稿元素都按照 (元素设计稿px/100 = 最终的rem)<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">doc, win</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> docEl = doc.documentElement,</div><div class="line">  resizeEvt = <span class="string">'orientationchange'</span> <span class="keyword">in</span> <span class="built_in">window</span> ? <span class="string">'orientationchange'</span> : <span class="string">'resize'</span>,</div><div class="line">  recalc = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">      <span class="keyword">var</span> clientWidth = docEl.clientWidth;</div><div class="line">      <span class="keyword">if</span> (!clientWidth) <span class="keyword">return</span>;</div><div class="line">      docEl.style.fontSize = <span class="number">100</span> * (clientWidth / <span class="number">750</span>) + <span class="string">'px'</span>;</div><div class="line">  &#125;;</div><div class="line"></div><div class="line">  <span class="keyword">if</span> (!doc.addEventListener) <span class="keyword">return</span>;</div><div class="line">  win.addEventListener(resizeEvt, recalc, <span class="literal">false</span>);</div><div class="line">  doc.addEventListener(<span class="string">'DOMContentLoaded'</span>, recalc, <span class="literal">false</span>);</div><div class="line">&#125;)(<span class="built_in">document</span>, <span class="built_in">window</span>);</div></pre></td></tr></table></figure></p>
<h1 id="10-禁用a-button-input-optgroup-select-textarea-等标签背景变暗"><a href="#10-禁用a-button-input-optgroup-select-textarea-等标签背景变暗" class="headerlink" title="10.禁用a,button,input,optgroup,select,textarea 等标签背景变暗"></a>10.禁用a,button,input,optgroup,select,textarea 等标签背景变暗</h1><p>在移动端使用a标签做按钮的时候或者文字连接的时候，点击按钮会出现一个 “暗色的”背景，比如如下代码:<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;a href=""&gt;button1&lt;/a&gt;</div><div class="line">&lt;input type="button" value="提交"/&gt;</div></pre></td></tr></table></figure></p>
<p>在移动端点击后 会出现”暗色”的背景，这时候我们需要在css加入如下代码即可：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">a,button,input,optgroup,select,textarea&#123;</div><div class="line">    -webkit-tap-highlight-color: rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="11-webkit表单输入框placeholder的颜色值改变"><a href="#11-webkit表单输入框placeholder的颜色值改变" class="headerlink" title="11.webkit表单输入框placeholder的颜色值改变"></a>11.webkit表单输入框placeholder的颜色值改变</h1><p>如果想要默认的颜色显示红色，代码如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">input::-webkit-input-placeholder&#123;<span class="attr">color</span>:red;&#125;</div></pre></td></tr></table></figure>
<p>如果想要用户点击变为蓝色，代码如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">input:focus::-webkit-input-placeholder&#123;<span class="attr">color</span>:blue;&#125;</div></pre></td></tr></table></figure>
<h1 id="12-禁止复制、选中文本"><a href="#12-禁止复制、选中文本" class="headerlink" title="12. 禁止复制、选中文本"></a>12. 禁止复制、选中文本</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Element &#123;</div><div class="line">    -webkit-user-select: none;</div><div class="line">    -moz-user-select: none;</div><div class="line">    -khtml-user-select: none;</div><div class="line">     user-select: none;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="12-iphone及ipad下输入框默认内阴影"><a href="#12-iphone及ipad下输入框默认内阴影" class="headerlink" title="12.iphone及ipad下输入框默认内阴影"></a>12.iphone及ipad下输入框默认内阴影</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Element&#123;</div><div class="line">    -webkit-appearance: none;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-Meta标签&quot;&gt;&lt;a href=&quot;#1-Meta标签&quot; class=&quot;headerlink&quot; title=&quot;1.Meta标签&quot;&gt;&lt;/a&gt;1.Meta标签&lt;/h1&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;
    
    </summary>
    
      <category term="mobile" scheme="caoxiang156.github.io/categories/mobile/"/>
    
    
  </entry>
  
  <entry>
    <title>基础算法</title>
    <link href="caoxiang156.github.io/2017/09/06/array/"/>
    <id>caoxiang156.github.io/2017/09/06/array/</id>
    <published>2017-09-06T00:50:44.018Z</published>
    <updated>2017-09-06T02:39:34.316Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数组去重"><a href="#数组去重" class="headerlink" title="数组去重"></a>数组去重</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">// 返回去重后的数组</div><div class="line">const numbers = [1, 2, 1, 1, 2, 1, 3, 4, 1 ];</div><div class="line">const uniq = [...new Set(numbers)] // =&gt; [ 1, 2, 3, 4 ];</div><div class="line">const uniq2 = Array.from(new Set(numbers)) // =&gt; [ 1, 2, 3, 4 ];</div></pre></td></tr></table></figure>
<h1 id="根据属性来更新一个数组中的对象"><a href="#根据属性来更新一个数组中的对象" class="headerlink" title="根据属性来更新一个数组中的对象"></a>根据属性来更新一个数组中的对象</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">const initial = [ &#123;id: 1, score: 1&#125;, &#123;id: 2, score: 2&#125;, &#123;id: 3, score: 4&#125;];</div><div class="line">const newValue = &#123;id: 3, score: 3&#125;;</div><div class="line">const updated = initial.map(x =&gt; x.id === newValue.id ? newValue : x);</div><div class="line">console.log(updated) // =&gt; [ &#123; id: 1, score: 1 &#125;, &#123; id: 2, score: 2 &#125;, &#123; id: 3, score: 3 &#125; ]</div></pre></td></tr></table></figure>
<h1 id="根据属性删除数组中的一个对象"><a href="#根据属性删除数组中的一个对象" class="headerlink" title="根据属性删除数组中的一个对象"></a>根据属性删除数组中的一个对象</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">const removeId = 3;</div><div class="line">const without3 = initial.filter(x =&gt; x.id !== removeId);</div><div class="line">console.log(without3) // =&gt; [ &#123; id: 1, score: 1 &#125;, &#123; id: 2, score: 2 &#125; ]</div></pre></td></tr></table></figure>
<h1 id="删除一个对象上的属性-key"><a href="#删除一个对象上的属性-key" class="headerlink" title="删除一个对象上的属性(key)"></a>删除一个对象上的属性(key)</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">const obj = &#123;a: 1, b: 2, c: 3&#125;;</div><div class="line">const &#123;a, ...newObj&#125; = obj;</div><div class="line">console.log(newObj) // =&gt; &#123;b: 2, c: 3&#125;;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;数组去重&quot;&gt;&lt;a href=&quot;#数组去重&quot; class=&quot;headerlink&quot; title=&quot;数组去重&quot;&gt;&lt;/a&gt;数组去重&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JS开发中的一些小技巧和方法</title>
    <link href="caoxiang156.github.io/2017/09/01/tips/"/>
    <id>caoxiang156.github.io/2017/09/01/tips/</id>
    <published>2017-09-01T06:08:16.617Z</published>
    <updated>2017-09-01T06:59:38.436Z</updated>
    
    <content type="html"><![CDATA[<h1 id="生成指定范围内的随机数"><a href="#生成指定范围内的随机数" class="headerlink" title="生成指定范围内的随机数"></a>生成指定范围内的随机数</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">function setRadomNum(min,max)&#123;</div><div class="line">   return  Math.floor(Math.random() * (max - min + 1)) + min;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<h1 id="json转url参数"><a href="#json转url参数" class="headerlink" title="json转url参数"></a>json转url参数</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">function json2url(json) &#123;</div><div class="line">    var arr=[];</div><div class="line">    for(var name in json)&#123;</div><div class="line">        arr.push(name+&apos;=&apos;+json[name]);</div><div class="line">    &#125;</div><div class="line">    return arr.join(&apos;&amp;&apos;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="验证是否为数组"><a href="#验证是否为数组" class="headerlink" title="验证是否为数组"></a>验证是否为数组</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">function isArray(obj)&#123;</div><div class="line">    return Array.isArray(obj) || Object.prototype.toString.call(obj) === &apos;[object Array]&apos;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="清空数组"><a href="#清空数组" class="headerlink" title="清空数组"></a>清空数组</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">方式一 通过将长度设置为0</div><div class="line">var arr=[1,2,3,4,5];</div><div class="line">arr.length=0;</div><div class="line"></div><div class="line">方式二 通过splice方法</div><div class="line"> var arr=[1,2,3,4,5];</div><div class="line">arr.splice(0,arr.length);</div><div class="line">//方式三</div><div class="line"></div><div class="line">var arr=[1,2,3,4,5];</div><div class="line">arr=[];</div></pre></td></tr></table></figure>
<h1 id="保留指定小数位"><a href="#保留指定小数位" class="headerlink" title="保留指定小数位"></a>保留指定小数位</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var num =3.1415926;</div><div class="line"></div><div class="line">num = num.toFixed(4); //toFixed()方法可把 Number 四舍五入为指定小数位数的数字，括号里面取值0~20（包括0和20）</div><div class="line"></div><div class="line">console.log(num); //3.1416</div></pre></td></tr></table></figure>
<h1 id="打乱数组的顺序"><a href="#打乱数组的顺序" class="headerlink" title="打乱数组的顺序"></a>打乱数组的顺序</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">方式一</div><div class="line">arr.sort(function()&#123;return Math.random()-0.5&#125;);</div><div class="line">方式二</div><div class="line">function shuffle(arr) &#123;</div><div class="line">    var i, </div><div class="line">        j,</div><div class="line">        temp;</div><div class="line">    for (i = arr.length - 1; i &gt; 0; i--) &#123;</div><div class="line">        j = Math.floor(Math.random() * (i + 1));</div><div class="line">        temp = arr[i];</div><div class="line">        arr[i] = arr[j];</div><div class="line">        arr[j] = temp;</div><div class="line">    &#125;</div><div class="line">    return arr;    </div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h1 id="使用-而不是"><a href="#使用-而不是" class="headerlink" title="使用 === 而不是 =="></a>使用 === 而不是 ==</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[10] ==  10      // 为 true</div><div class="line">[10] === 10      // 为 false</div><div class="line">&apos;10&apos; ==  10      // 为 true</div><div class="line">&apos;10&apos; === 10      // 为 false</div><div class="line"> []  ==  0       // 为 true</div><div class="line"> []  === 0       // 为 false</div><div class="line"> &apos;&apos;  ==  false   // 为 true 但 true == &quot;a&quot; 为false</div><div class="line"> &apos;&apos;  === false   // 为 false</div></pre></td></tr></table></figure>
<h1 id="妙用“-amp-amp-”和“-”"><a href="#妙用“-amp-amp-”和“-”" class="headerlink" title="妙用“&amp;&amp;”和“||”"></a>妙用“&amp;&amp;”和“||”</h1><h3 id="用于赋值"><a href="#用于赋值" class="headerlink" title="用于赋值"></a>用于赋值</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var attr = true &amp;&amp; 4 &amp;&amp; &quot;aaa&quot;; //aaa;</div><div class="line">var attr = true &amp;&amp; 0 &amp;&amp; &quot;aaa&quot;; //0</div><div class="line">var attr = 100 || 12; //100</div><div class="line">var attr = &quot;e&quot; || &quot;hahaha&quot; //&apos;e&apos;</div><div class="line">var attr = &quot;&quot; || &quot;hahaha&quot; //&apos;hahaha&apos;</div></pre></td></tr></table></figure>
<h3 id="用于条件执行语句"><a href="#用于条件执行语句" class="headerlink" title="用于条件执行语句"></a>用于条件执行语句</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">// 普通的if语句</div><div class="line">if(test)&#123;</div><div class="line">  isTrue();</div><div class="line">&#125;</div><div class="line">// 上面的语句可以使用 &apos;&amp;&amp;&apos; 写为：</div><div class="line">( test &amp;&amp; isTrue() );</div><div class="line">test = false;</div><div class="line">if(!test)&#123;</div><div class="line">  isFalse();</div><div class="line">&#125;</div><div class="line">// 上面的语句可以使用 &apos;||&apos; 写为：</div><div class="line">( test || isFalse());</div></pre></td></tr></table></figure>
<h3 id="用于多次判断后的赋值"><a href="#用于多次判断后的赋值" class="headerlink" title="用于多次判断后的赋值"></a>用于多次判断后的赋值</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">var add_level = 0; </div><div class="line">if(add_step == 5)&#123; </div><div class="line">    add_level = 1; </div><div class="line">&#125; </div><div class="line">else if(add_step == 10)&#123; </div><div class="line">    add_level = 2; </div><div class="line">&#125; </div><div class="line">else if(add_step == 12)&#123; </div><div class="line">    add_level = 3; </div><div class="line">&#125; </div><div class="line">else if(add_step == 15)&#123; </div><div class="line">    add_level = 4; </div><div class="line">&#125; </div><div class="line">else &#123; </div><div class="line">    add_level = 0; </div><div class="line">&#125;</div><div class="line">//可以写成</div><div class="line">var add_level = (add_step==5 &amp;&amp; 1) || (add_step==10 &amp;&amp; 2) || (add_step==12 &amp;&amp; 3) || (add_step==15 &amp;&amp; 4) || 0;</div></pre></td></tr></table></figure>
<h1 id="获取数组中的最大值或最小值"><a href="#获取数组中的最大值或最小值" class="headerlink" title="获取数组中的最大值或最小值"></a>获取数组中的最大值或最小值</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">function maxAndMin(arr)&#123;</div><div class="line">    return &#123;</div><div class="line">       max:Math.max.apply(null,arr.join(&apos;,&apos;).split(&apos;,&apos;)),</div><div class="line">       min:Math.min.apply(null,arr.join(&apos;,&apos;).split(&apos;,&apos;))</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="随机获取数组里的元素"><a href="#随机获取数组里的元素" class="headerlink" title="随机获取数组里的元素"></a>随机获取数组里的元素</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">function getRadomFromArr(arr)&#123;</div><div class="line">    return arr[Math.floor(Math.random()*arr.length)];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="从数组里查找指定的值"><a href="#从数组里查找指定的值" class="headerlink" title="从数组里查找指定的值"></a>从数组里查找指定的值</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">function findInArr(arr, value)&#123;</div><div class="line">	for (var i=0; i&lt;arr.length; i++)&#123;</div><div class="line">		if (arr[i] == value)&#123;</div><div class="line">			return true;</div><div class="line">		&#125;</div><div class="line">	&#125;	</div><div class="line">	return false;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="生成指定长度的随机数字字母字符串"><a href="#生成指定长度的随机数字字母字符串" class="headerlink" title="生成指定长度的随机数字字母字符串"></a>生成指定长度的随机数字字母字符串</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">function getRandomStr(len) &#123;</div><div class="line">    var str = &quot;&quot;;</div><div class="line">    for( ; str.length &lt; len; str  += Math.random().toString(36).substr(2));</div><div class="line">    return  str.substr(0, len);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="去除字符串的空格"><a href="#去除字符串的空格" class="headerlink" title="去除字符串的空格"></a>去除字符串的空格</h1><h3 id="去除首尾空格"><a href="#去除首尾空格" class="headerlink" title="去除首尾空格"></a>去除首尾空格</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">function trim(str)&#123;</div><div class="line">    return str.replace(/(^\s*)|(\s*$)/g, &quot;&quot;);</div><div class="line">&#125;</div><div class="line">trim(&apos;  hello world    &apos;); //&quot;hello world&quot;</div></pre></td></tr></table></figure>
<h3 id="去除所有空格"><a href="#去除所有空格" class="headerlink" title="去除所有空格"></a>去除所有空格</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">function trimAll(str)&#123;</div><div class="line">    return str.replace(/\s+/g,&quot;&quot;);</div><div class="line">&#125;</div><div class="line">trimAll(&apos;   he ll o  wo  r ld    &apos;); //&quot;helloworld&quot;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;生成指定范围内的随机数&quot;&gt;&lt;a href=&quot;#生成指定范围内的随机数&quot; class=&quot;headerlink&quot; title=&quot;生成指定范围内的随机数&quot;&gt;&lt;/a&gt;生成指定范围内的随机数&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;tabl
    
    </summary>
    
    
  </entry>
  
</feed>
